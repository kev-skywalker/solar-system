name: Deployment - Reusable Workflow

on:
    workflow_call:
      inputs:
        mongodb-uri:
          required: true
          type: string
        kubectl-version:
          description: Provide the required kubectl version
          default: v1.26.0
          required: false
          type: string
        k8s-manifest-dir:
          description: Directory containing Kubernetes manifests files
          default: kubernetes/
          required: true
          type: string
        environment:
          description: Provide the Deployment Envaronment
          default: dev
          required: true
          type: string 
      secrets:
        k8s-kubeconfig:
          required: true
        mongodb-password:
          required: true
      outputs:
        application-url:
          value: ${{ jobs.reuse.deploy.outputs.APP_INGRESS_HOST }}
      


jobs:
    reuse-deploy:
        environment:
           name: ${{ inputs.environment }}
           #copied from job outputs layer in order to easily get it
           url: https://${{ steps.step-set_ingress_host_url.outputs.APP_INGRESS_HOST }}

        runs-on: ubuntu-latest
        # Map a step output to a job output
        outputs:
            APP_INGRESS_HOST: ${{ steps.step-set_ingress_host_url.outputs.APP_INGRESS_HOST }}
        steps:
        - name: checkout Repo
          uses: actions/checkout@v4

        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: '${{ inputs.kubectl-version }}'

        - name: set Kubeconfig
          uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.k8s-kubeconfig }}

        - name: Fetch Kubernetes cluster Details
          run: |
            kubectl version --short
            echo ---------------------
            kubectl get nodes
        
        - name: save Nginx Ingress Controller IP as a GITHUB Environment Variable
          #any declared variable in this step will not be available for the current step all subsequent steps in a job will have access
          run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jspath=".status.loadbalancer.ingress[0].ip") >> "$GITHUB_ENV"
        

        - name: Replace Token in Manifest File
          uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '${'
            tokenSuffix: '}'
            files: '["${{ inputs.k8s-manifest-dir }}*.yaml"]'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS:  ${{ vars.REPLICAS }}
            IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            #use the declared variable in the $GITHUB_ENV
            INGRESS_IP: ${{ env.INGRESS_IP }}

        - name: Check Files
          run: |
            cat ${{ inputs.k8s-manifest-dir }}*.yaml

        - name: Create and check MongoDB Secret
          run: |
            echo --------create MongoDB Secret---------
            kubectl -n ${{ vars.NAMESPACE }} create secret mongo-db-creds \
            --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -
            echo --------check MongoDB secret-----------
            kubectl -n ${{ vars.NAMESPACE }} get secrets

        - name: Deploy to DEV Env and check and Verify
          run: |
            kubectl apply -f ${{ inputs.k8s-manifest-dir }}
            echo ------ get all infos about deploy ----------
            kubectl -n ${{ vars.NAMESPACE }} get all

        - name: Set App Ingress Host URL
          id: step-set_ingress_host_url
          run: |
            echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="(.items[0].spec.tls[0].hosts[0])")" >> "$GITHUB_OUTPUT"
