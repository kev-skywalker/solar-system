name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
        - main
        - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData' 
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                nodejs_version: [18, 20]
                operating_system: [ubuntu-latest, macos-latest]
                exclude:
                    - nodejs_version: 18
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: checkout repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodejs_version }}

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-module-${{ hashFiles('package-lock.json') }}
        
        - name: install Dependencies
          run: npm install

        - name: Unit Testing
          id:  nodejs-unit-testing-step #set id in order to bypass the failure of the current step
          run: npm test
        
        - name: Archive Test Result
          #if the outcome status of the previous step is failure, then the next step will still run
          #if: failure() && (steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success') 
          #this step will always run even if the previous status step is success or failure
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: install Dependencies
          run: npm install

        - name: check code coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: covarage
            retention-days: 5

    docker:
        name: Containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ vars.DOCKERHUB_USERNAME}}
            password: ${{ secrets.DOCKERHUB_TOKEN }}